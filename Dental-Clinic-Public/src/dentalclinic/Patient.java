/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dentalclinic;

import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import net.proteanit.sql.*;

/**
 *
 * @author user
 */
public class Patient extends javax.swing.JFrame
{
    Connection conn;
    String col, sql, search;
    int row;
    PreparedStatement stmt;
    ResultSet result;
    TableRowSorter<DefaultTableModel> tableRow;
    /**
     * Creates new form Patient
     */
    public Patient() 
    {
        initComponents();
        showTableData();
        updateTableData();
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer)patientTable.getDefaultRenderer(Object.class);
        renderer.setHorizontalAlignment( JLabel.CENTER);
        patientTable.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        patientTable.getColumnModel().getColumn(0).setPreferredWidth(50);
        patientTable.getColumnModel().getColumn(1).setPreferredWidth(230);
        patientTable.getColumnModel().getColumn(2).setPreferredWidth(325);
        patientTable.getColumnModel().getColumn(3).setPreferredWidth(300);
    }
    
    public void showTableData()
    {
        try
        {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dentalclinic?serverTimezone=" + TimeZone.getDefault().getID(),"root","");
            sql = "SELECT id AS 'No.', patient_name AS 'Patient Name', patient_details AS 'Patient Details', assigned_doctor AS 'Assigned Doctor' FROM patientdetails";
            stmt = conn.prepareStatement(sql);
            result= stmt.executeQuery();
            patientTable.setModel(DbUtils.resultSetToTableModel(result));
        }

        catch( SQLException | HeadlessException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        finally
        {
            try
            {
                result.close();
                stmt.close();
            }
            
            catch (SQLException | HeadlessException ex) 
            {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        
        updateTableData();
        
    }
    
    public void updateTableData()
    {
        try
        {
            sql = "SELECT id AS 'No.', patient_name AS 'Patient Name', patient_details AS 'Patient Details', assigned_doctor AS 'Assigned Doctor' FROM patientdetails";
            stmt = conn.prepareStatement(sql);
            result = stmt.executeQuery();
            patientTable.setModel(DbUtils.resultSetToTableModel(result));
        }
        
        catch( SQLException | HeadlessException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        finally
        {
            try
            {
                result.close();
                stmt.close();
            }

            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        patientSearchBar = new javax.swing.JTextField();
        patientLbl = new javax.swing.JLabel();
        patientScrollPane = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        signoutBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        exitLbl = new javax.swing.JLabel();
        minimizeLbl = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        idTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        detailsTxt = new javax.swing.JTextField();
        assignedDoctorTxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        labelassdoctor = new javax.swing.JLabel();
        labelno = new javax.swing.JLabel();
        labelname = new javax.swing.JLabel();
        labeldetails = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        patientSearchBar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        patientSearchBar.setForeground(new java.awt.Color(153, 153, 153));
        patientSearchBar.setText("Search");
        patientSearchBar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patientSearchBarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                patientSearchBarFocusLost(evt);
            }
        });
        patientSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSearchBarActionPerformed(evt);
            }
        });
        patientSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                patientSearchBarKeyPressed(evt);
            }
        });

        patientLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        patientLbl.setForeground(new java.awt.Color(255, 255, 255));
        patientLbl.setText("Patient's Section");

        patientTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "Patient Name", "Details", "Assigned Doctor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        patientTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        patientScrollPane.setViewportView(patientTable);
        if (patientTable.getColumnModel().getColumnCount() > 0) {
            patientTable.getColumnModel().getColumn(0).setMinWidth(10);
            patientTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            patientTable.getColumnModel().getColumn(0).setMaxWidth(10);
        }

        signoutBtn.setBackground(new java.awt.Color(102, 51, 153));
        signoutBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        signoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        signoutBtn.setText("Sign Out");
        signoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(102, 51, 153));
        backBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        exitLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        exitLbl.setForeground(new java.awt.Color(204, 0, 0));
        exitLbl.setText("X");
        exitLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLblMouseClicked(evt);
            }
        });

        minimizeLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        minimizeLbl.setText("-");
        minimizeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLblMouseClicked(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(102, 51, 153));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        idTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idTxt.setForeground(new java.awt.Color(153, 153, 153));
        idTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idTxtFocusLost(evt);
            }
        });
        idTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTxtActionPerformed(evt);
            }
        });

        nameTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameTxt.setForeground(new java.awt.Color(153, 153, 153));
        nameTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameTxtFocusLost(evt);
            }
        });

        detailsTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        detailsTxt.setForeground(new java.awt.Color(153, 153, 153));
        detailsTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                detailsTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                detailsTxtFocusLost(evt);
            }
        });

        assignedDoctorTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        assignedDoctorTxt.setForeground(new java.awt.Color(153, 153, 153));
        assignedDoctorTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                assignedDoctorTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                assignedDoctorTxtFocusLost(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(102, 51, 153));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(102, 51, 153));
        addBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        labelassdoctor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelassdoctor.setText("Assigned Doctor");

        labelno.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelno.setText("NO:");

        labelname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelname.setText("Name");

        labeldetails.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labeldetails.setText("Patient Details");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(signoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimizeLbl)
                .addGap(18, 18, 18)
                .addComponent(exitLbl)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(385, 385, 385)
                        .addComponent(patientSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(patientScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(415, 415, 415)
                        .addComponent(patientLbl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(assignedDoctorTxt)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(detailsTxt)
                    .addComponent(nameTxt)
                    .addComponent(idTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addComponent(labelassdoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labeldetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(minimizeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addComponent(patientLbl)
                        .addGap(38, 38, 38)
                        .addComponent(patientSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(patientScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(labeldetails, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(detailsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(labelassdoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(assignedDoctorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn))
                .addGap(97, 97, 97)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signoutBtn)
                    .addComponent(backBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void patientSearchBarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientSearchBarFocusGained
       
        if(patientSearchBar.getText().equals("Search"))
        {
            patientSearchBar.setText("");
        }
    }//GEN-LAST:event_patientSearchBarFocusGained

    private void patientSearchBarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientSearchBarFocusLost
        
        if(patientSearchBar.getText().equals(""))
        {
            patientSearchBar.setText("Search");
        }
    }//GEN-LAST:event_patientSearchBarFocusLost

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        
        dispose();
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void signoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutBtnActionPerformed
        
        dispose();
        new LogIn().setVisible(true);
    }//GEN-LAST:event_signoutBtnActionPerformed

    private void exitLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLblMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLblMouseClicked

    private void minimizeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLblMouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeLblMouseClicked

    private void patientSearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientSearchBarKeyPressed
        
        DefaultTableModel patientTbl = (DefaultTableModel)patientTable.getModel();
        search = patientSearchBar.getText();
        tableRow = new TableRowSorter<>(patientTbl);
        patientTable.setRowSorter(tableRow);
        tableRow.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_patientSearchBarKeyPressed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        row = patientTable.getSelectedRow();
        col = patientTable.getModel().getValueAt(row, 0).toString();

        try
        {
            sql = "DELETE FROM patientdetails WHERE id =" + col;
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dentalclinic?serverTimezone=" + TimeZone.getDefault().getID(),"root","");
            stmt = conn.prepareStatement(sql);
            stmt.execute();
            JOptionPane.showMessageDialog(null, "Data deleted succesfully");
        }
        
        catch( SQLException | HeadlessException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        updateTableData();
        showTableData();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void idTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idTxtFocusGained
        if(idTxt.getText().equals("No"))
        {
            idTxt.setText("");
        }
    }//GEN-LAST:event_idTxtFocusGained

    private void idTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idTxtFocusLost
        if(idTxt.getText().equals(""))
        {
            idTxt.setText("No");
        }
    }//GEN-LAST:event_idTxtFocusLost

    private void nameTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTxtFocusGained
        if(nameTxt.getText().equals("Name"))
        {
            nameTxt.setText("");
        }
    }//GEN-LAST:event_nameTxtFocusGained

    private void nameTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameTxtFocusLost
        if(nameTxt.getText().equals(""))
        {
            nameTxt.setText("Name");
        }
    }//GEN-LAST:event_nameTxtFocusLost

    private void detailsTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detailsTxtFocusGained
        if(detailsTxt.getText().equals("Patient Details"))
        {
            detailsTxt.setText("");
        }
    }//GEN-LAST:event_detailsTxtFocusGained

    private void detailsTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_detailsTxtFocusLost
        if(detailsTxt.getText().equals(""))
        {
            detailsTxt.setText("Patient Details");
        }
    }//GEN-LAST:event_detailsTxtFocusLost

    private void assignedDoctorTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_assignedDoctorTxtFocusGained
        if(assignedDoctorTxt.getText().equals("Assigned Doctor"))
        {
            assignedDoctorTxt.setText("");
        }
    }//GEN-LAST:event_assignedDoctorTxtFocusGained

    private void assignedDoctorTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_assignedDoctorTxtFocusLost
        if(assignedDoctorTxt.getText().equals(""))
        {
            assignedDoctorTxt.setText("Assigned Doctor");
        }
    }//GEN-LAST:event_assignedDoctorTxtFocusLost

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        try
        {
            sql = "UPDATE patientdetails SET patient_name=?, patient_details=?, assigned_doctor=? WHERE id=?";
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dentalclinic?serverTimezone=" + TimeZone.getDefault().getID(),"root","");
            stmt = conn.prepareStatement(sql);
            stmt.setString(4, idTxt.getText());
            stmt.setString(1, nameTxt.getText());
            stmt.setString(2, detailsTxt.getText());
            stmt.setString(3, assignedDoctorTxt.getText());
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data updated succesfully");
        }

        catch (SQLException | HeadlessException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }

        updateTableData();
        showTableData();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        try
        {
            sql = "INSERT INTO patientdetails(patient_name, patient_details, assigned_doctor) VALUES (?,?,?)";
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dentalclinic?serverTimezone=" + TimeZone.getDefault().getID(),"root","");
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, nameTxt.getText());
            stmt.setString(2, detailsTxt.getText());
            stmt.setString(3, assignedDoctorTxt.getText());
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data succesfully added");
        }

        catch (SQLException | HeadlessException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        updateTableData();
        showTableData();
    }//GEN-LAST:event_addBtnActionPerformed

    private void idTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTxtActionPerformed

    private void patientSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientSearchBarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField assignedDoctorTxt;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField detailsTxt;
    private javax.swing.JLabel exitLbl;
    private javax.swing.JTextField idTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelassdoctor;
    private javax.swing.JLabel labeldetails;
    private javax.swing.JLabel labelname;
    private javax.swing.JLabel labelno;
    private javax.swing.JLabel minimizeLbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel patientLbl;
    private javax.swing.JScrollPane patientScrollPane;
    private javax.swing.JTextField patientSearchBar;
    private javax.swing.JTable patientTable;
    private javax.swing.JButton signoutBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
